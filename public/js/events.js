const API_BASE="https://<tu-worker-subdomain>.workers.dev";const STATE={events:[],filter:"All"};let SESSION={user:null,membership:null};
async function fetchEvents(){const r=await fetch(`${API_BASE}/api/events`,{credentials:"include"});const d=await r.json();if(d.ok)STATE.events=d.events;renderEvents();}
function renderEvents(){const list=document.getElementById("ev-list");if(!list)return;const f=STATE.filter;const evs=STATE.events.filter(e=>f==="All"||e.type===f);
list.innerHTML=evs.map(e=>`<article class="card"><header><h3>${e.title}</h3><div class="muted">${new Date(e.date_iso).toLocaleString("it-IT")} — ${e.location}</div></header><p>${e.description||""}</p><div class="meta"><span class="tag">${e.type}</span><span class="pill">${Math.max(0,(e.capacity||0)-(e.sold||0))} posti</span><span class="price">€${e.price_eur}</span></div><form class="buy" onsubmit="return startCheckout(event,'${e.id}')"><label>Quantità <input name="qty" type="number" min="1" value="1"></label><label>Email <input name="email" type="email" required></label><button>Prenota</button></form></article>`).join("");document.querySelectorAll(".filter button").forEach(b=>b.classList.toggle("active",b.dataset.type===f));}
function setFilter(t){STATE.filter=t;renderEvents();}
async function startCheckout(ev,eventId){ev.preventDefault();const f=ev.target;const qty=Number(f.qty.value||"1");const email=f.email.value.trim();f.querySelector("button").disabled=true;try{const r=await fetch(`${API_BASE}/api/checkout`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({eventId,quantity:qty,email}),credentials:"include"});const d=await r.json();if(!d.ok){alert(d.error||"Errore checkout");f.querySelector("button").disabled=false;return;}location.href=d.url;}catch(e){alert("Connessione non riuscita");f.querySelector("button").disabled=false;}return false;}
async function me(){const r=await fetch(`${API_BASE}/me`,{credentials:"include"});const d=await r.json();SESSION.user=d.user||null;SESSION.membership=d.membership||{tier:"free",status:"none"};return SESSION;}
async function requestLogin(email){const r=await fetch(`${API_BASE}/auth/request`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email}),credentials:"include"});const d=await r.json();return d.ok;}
async function completeLoginFromURL(){const p=new URLSearchParams(location.search);const token=p.get("token");if(!token)return;const r=await fetch(`${API_BASE}/auth/callback`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token}),credentials:"include"});const d=await r.json();if(d.ok){history.replaceState({}, "", location.pathname);await me();renderDashboard();}}
async function fetchMaterials(){const r=await fetch(`${API_BASE}/api/materials`,{credentials:"include"});const d=await r.json();return d.ok?d.materials:[]}
async function startMembership(price_id){const r=await fetch(`${API_BASE}/api/memberships/checkout`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({price_id}),credentials:"include"});const d=await r.json();if(d.ok)location.href=d.url;}
async function openBillingPortal(){const r=await fetch(`${API_BASE}/api/memberships/portal`,{method:"POST",credentials:"include"});const d=await r.json();if(d.ok)location.href=d.url;}
async function renderDashboard(){const box=document.getElementById("dash");if(!box)return;if(!SESSION.user){box.innerHTML=`<h2>Accedi</h2><form onsubmit="return onMagic(event)" class="buy"><input id="loginEmail" type="email" placeholder="tu@email.it" required><button>Invia link magico</button></form><p class="muted">Riceverai un link via e-mail.</p>`;return;}
const mats=await fetchMaterials();box.innerHTML=`<h2>Ciao, ${SESSION.user.email}</h2><p class="muted">Membership: <b>${SESSION.membership?.tier||'free'}</b> (${SESSION.membership?.status||'none'})</p><div class="meta" style="margin:8px 0;"><button onclick="openBillingPortal()">Gestisci abbonamento</button><button onclick="logout()">Esci</button></div><h3>Materiali disponibili</h3><ul>${(mats||[]).map(m=>`<li><a href="${API_BASE}/api/materials/${m.id}" target="_blank" rel="noopener">${m.title}</a></li>`).join("")||"<li>Nessun materiale</li>"}</ul>`;}
window.onMagic=async(ev)=>{ev.preventDefault();const email=document.getElementById("loginEmail").value.trim();const ok=await requestLogin(email);alert(ok?"Controlla la tua e-mail":"Invio fallito");return false;};
window.logout=async()=>{await fetch(`${API_BASE}/auth/logout`,{method:"POST",credentials:"include"});SESSION.user=null;renderDashboard();};
window.addEventListener("DOMContentLoaded",async()=>{if(document.getElementById("ev-list")){document.querySelectorAll(".filter button").forEach(btn=>btn.addEventListener("click",()=>setFilter(btn.dataset.type)));await fetchEvents();}});
window.confirmTicketIfNeeded=async function(){const p=new URLSearchParams(location.search);const session_id=p.get("session_id");const eventId=p.get("event");if(!session_id)return;const r=await fetch(`${API_BASE}/api/confirm?session_id=${encodeURIComponent(session_id)}&event=${encodeURIComponent(eventId)}`,{method:"POST",credentials:"include"});const d=await r.json();const box=document.getElementById("success-box");if(!d.ok){box.innerHTML=`<p class="error">Pagamento non confermato. ${d.error||""}</p>`;return;}const t=d.ticket||(d.alreadyIssued&&d.ticket);box.innerHTML=`<h2>Biglietto emesso ✅</h2><p>Dettagli inviati a: <b>${t.email}</b></p><p><a class="cta" href="${API_BASE}/pass/${t.id}" target="_blank" rel="noopener">Apri il tuo biglietto</a></p>`;};
