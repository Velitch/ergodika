{
  "version": 3,
  "sources": ["../../../src/auth.js", "../../../src/tracks.js", "../../../src/payments.js", "../../../src/index.js"],
  "sourceRoot": "C:\\Users\\Admin\\Desktop\\ergodika\\.wrangler\\tmp\\deploy-rgiujw",
  "sourcesContent": ["import { json } from \"./index.js\";\r\n\r\n/* =======================================================\r\n * Utils\r\n * ======================================================= */\r\nconst ENC = new TextEncoder();\r\n\r\nconst b64url = (bytes) =>\r\n  btoa(String.fromCharCode(...new Uint8Array(bytes)))\r\n    .replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/,\"\");\r\n\r\nconst b64urlStr = (str) =>\r\n  btoa(str).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=+$/,\"\");\r\n\r\nconst b64urlToBytes = (s) => {\r\n  const pad = s.length % 4 ? \"=\".repeat(4 - (s.length % 4)) : \"\";\r\n  const b64 = s.replace(/-/g,\"+\").replace(/_/g,\"/\") + pad;\r\n  const bin = atob(b64);\r\n  const out = new Uint8Array(bin.length);\r\n  for (let i=0;i<bin.length;i++) out[i] = bin.charCodeAt(i);\r\n  return out;\r\n};\r\n\r\nconst utf8 = (s) => ENC.encode(s);\r\nconst nowSec = () => Math.floor(Date.now()/1000);\r\nconst normEmail = (e) => String(e||\"\").trim().toLowerCase();\r\nconst newId = (n=12) => {\r\n  const a = new Uint8Array(n); crypto.getRandomValues(a);\r\n  return [...a].map(b=>b.toString(16).padStart(2,\"0\")).join(\"\");\r\n};\r\n\r\nconst parseCookies = (req) => {\r\n  const raw = req.headers.get(\"Cookie\")||\"\";\r\n  const out = {};\r\n  raw.split(\";\").forEach(p=>{\r\n    const i = p.indexOf(\"=\"); if (i>0) out[p.slice(0,i).trim()] = decodeURIComponent(p.slice(i+1).trim());\r\n  });\r\n  return out;\r\n};\r\n\r\nconst cookieSerialize = (name, val, opts={}) => {\r\n  const p = [];\r\n  p.push(`${name}=${val}`);\r\n  if (opts.maxAge) p.push(`Max-Age=${opts.maxAge}`);\r\n  if (opts.expires) p.push(`Expires=${new Date(opts.expires*1000).toUTCString()}`);\r\n  p.push(`Path=${opts.path||\"/\"}`);\r\n  if (opts.domain) p.push(`Domain=${opts.domain}`);\r\n  if (opts.httpOnly!==false) p.push(\"HttpOnly\");\r\n  if (opts.secure!==false) p.push(\"Secure\");\r\n  p.push(`SameSite=${opts.sameSite||\"Lax\"}`);\r\n  return p.join(\"; \");\r\n};\r\n\r\n/* =======================================================\r\n * Crypto (JWT HS256) + Password (PBKDF2-SHA256)\r\n * ======================================================= */\r\nasync function hmacSign(keyBytes, dataStr) {\r\n  const key = await crypto.subtle.importKey(\"raw\", keyBytes, { name:\"HMAC\", hash:\"SHA-256\" }, false, [\"sign\"]);\r\n  const sig = await crypto.subtle.sign(\"HMAC\", key, utf8(dataStr));\r\n  return b64url(sig);\r\n}\r\n\r\nasync function jwtSign(payload, secretB64url, ttlSec) {\r\n  const header = { alg:\"HS256\", typ:\"JWT\" };\r\n  const exp = nowSec() + ttlSec;\r\n  const data = `${b64urlStr(JSON.stringify(header))}.${b64urlStr(JSON.stringify({...payload, exp}))}`;\r\n  const sig = await hmacSign(b64urlToBytes(secretB64url), data);\r\n  return `${data}.${sig}`;\r\n}\r\n\r\nasync function jwtVerify(token, secretB64url){\r\n  try {\r\n    const [h,p,s] = token.split(\".\");\r\n    if (!h||!p||!s) return null;\r\n    const sig = await hmacSign(b64urlToBytes(secretB64url), `${h}.${p}`);\r\n    if (sig !== s) return null;\r\n    const payload = JSON.parse(atob(p.replace(/-/g,\"+\").replace(/_/g,\"/\")));\r\n    if (payload.exp && nowSec() > payload.exp) return null;\r\n    return payload;\r\n  } catch { return null; }\r\n}\r\n\r\nasync function hashPassword(password, saltB64, iterations=310000){\r\n  const salt = Uint8Array.from(atob(saltB64), c=>c.charCodeAt(0));\r\n  const keyMaterial = await crypto.subtle.importKey(\"raw\", utf8(password), \"PBKDF2\", false, [\"deriveBits\"]);\r\n  const bits = await crypto.subtle.deriveBits({ name:\"PBKDF2\", hash:\"SHA-256\", salt, iterations }, keyMaterial, 256);\r\n  const hash = b64url(bits);\r\n  return { alg:\"PBKDF2-SHA256\", iter:iterations, salt:saltB64, hash };\r\n}\r\nasync function verifyPassword(password, rec){\r\n  if (!rec || rec.alg!==\"PBKDF2-SHA256\") return false;\r\n  const re = await hashPassword(password, rec.salt, rec.iter);\r\n  return re.hash === rec.hash;\r\n}\r\n\r\n/* =======================================================\r\n * D1 helpers\r\n * ======================================================= */\r\nasync function d1GetUserByEmail(env, email){\r\n  return env.DB.prepare(\"SELECT * FROM users WHERE email=?\").bind(email).first();\r\n}\r\nasync function d1GetUserById(env, id){\r\n  return env.DB.prepare(\"SELECT * FROM users WHERE id=?\").bind(id).first();\r\n}\r\nasync function d1GetUserByGoogleSub(env, sub){\r\n  return env.DB.prepare(\"SELECT * FROM users WHERE google_sub=?\").bind(sub).first();\r\n}\r\nasync function d1InsertUser(env, user){\r\n  await env.DB\r\n    .prepare(\"INSERT INTO users (id,email,password_alg,password_iter,password_salt,password_hash,google_sub,roles,created_at,updated_at) VALUES (?,?,?,?,?,?,?,?,?,?)\")\r\n    .bind(\r\n      user.id, user.email, user.password_alg, user.password_iter, user.password_salt, user.password_hash,\r\n      user.google_sub, JSON.stringify(user.roles), new Date().toISOString(), new Date().toISOString()\r\n    ).run();\r\n}\r\nasync function d1UpdateUserGoogleSub(env, id, sub){\r\n  await env.DB.prepare(\"UPDATE users SET google_sub=?, updated_at=? WHERE id=?\")\r\n    .bind(sub, new Date().toISOString(), id).run();\r\n}\r\nasync function d1InsertRefresh(env, userId, jti, exp){\r\n  await env.DB.prepare(\"INSERT INTO refresh_tokens (id,user_id,jti,expires_at,created_at) VALUES (?,?,?,?,?)\")\r\n    .bind(newId(12), userId, jti, exp, nowSec()).run();\r\n}\r\nasync function d1DeleteRefresh(env, userId, jti){\r\n  await env.DB.prepare(\"DELETE FROM refresh_tokens WHERE user_id=? AND jti=?\").bind(userId, jti).run();\r\n}\r\nasync function d1HasRefresh(env, userId, jti){\r\n  const r = await env.DB.prepare(\"SELECT 1 FROM refresh_tokens WHERE user_id=? AND jti=?\").bind(userId, jti).first();\r\n  return !!r;\r\n}\r\n\r\n/* =======================================================\r\n * Cookie helpers\r\n * ======================================================= */\r\nfunction jsonWithCookies(data, cookies=[], status=200){\r\n  const res = json(data, status);\r\n  const h = new Headers(res.headers);\r\n  cookies.forEach(c => h.append(\"Set-Cookie\", c));\r\n  return new Response(res.body, { status: res.status, headers: h });\r\n}\r\nfunction clearAuthCookies(){\r\n  return [\r\n    cookieSerialize(\"session\",\"\", { maxAge:0, path:\"/\", secure:true, sameSite:\"None\" }),\r\n    cookieSerialize(\"refresh\",\"\", { maxAge:0, path:\"/\", secure:true, sameSite:\"None\" })\r\n  ];\r\n}\r\n\r\n/* =======================================================\r\n * Router\r\n * ======================================================= */\r\nexport async function routeAuth(request, url, env){\r\n  const path = url.pathname;\r\n\r\n  if (request.method===\"POST\" && path===\"/api/auth/register\") {\r\n    const body = await safeJson(request);\r\n    return await authRegister(body, env);\r\n  }\r\n  if (request.method===\"POST\" && path===\"/api/auth/login\") {\r\n    const body = await safeJson(request);\r\n    return await authLogin(body, env);\r\n  }\r\n  if (request.method===\"POST\" && path===\"/api/auth/logout\") {\r\n    return await authLogout(request, env);\r\n  }\r\n  if (request.method===\"GET\" && path===\"/api/auth/me\") {\r\n    return await authMe(request, env);\r\n  }\r\n  if (request.method===\"POST\" && path===\"/api/auth/refresh\") {\r\n    return await authRefresh(request, env);\r\n  }\r\n\r\n  if (request.method===\"GET\" && path===\"/api/auth/google/start\") {\r\n    return await googleStart(url, env);\r\n  }\r\n  if (request.method===\"GET\" && path===\"/api/auth/google/callback\") {\r\n    return await googleCallback(url, env);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nasync function safeJson(request){ try { return await request.json(); } catch { return {}; } }\r\n\r\n/* =======================================================\r\n * Email/Password flows\r\n * ======================================================= */\r\nasync function authRegister(body, env){\r\n  const email = normEmail(body.email);\r\n  const password = body.password||\"\";\r\n  if (!/^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(email)) return json({ ok:false, error:\"invalid email\" }, 400);\r\n  if (password.length < 8) return json({ ok:false, error:\"weak password\" }, 400);\r\n\r\n  const exists = await d1GetUserByEmail(env, email);\r\n  if (exists) return json({ ok:false, error:\"email already registered\" }, 409);\r\n\r\n  const saltB64 = btoa(String.fromCharCode(...crypto.getRandomValues(new Uint8Array(16))));\r\n  const pwd = await hashPassword(password, saltB64);\r\n  const user = {\r\n    id:newId(12), email,\r\n    password_alg: pwd.alg, password_iter: pwd.iter, password_salt: pwd.salt, password_hash: pwd.hash,\r\n    google_sub: null, roles:[\"user\"]\r\n  };\r\n  await d1InsertUser(env, user);\r\n  const { cookies: setCookies } = await issueSessionCookies(user, env);\r\n  return jsonWithCookies({ ok:true, user:{ id:user.id, email, roles:user.roles } }, setCookies);\r\n}\r\n\r\nasync function authLogin(body, env){\r\n  const email = normEmail(body.email);\r\n  const password = body.password||\"\";\r\n  const user = await d1GetUserByEmail(env, email);\r\n  if (!user) return json({ ok:false, error:\"invalid credentials\" }, 401);\r\n\r\n  const ok = await verifyPassword(password, {\r\n    alg:user.password_alg, iter:user.password_iter, salt:user.password_salt, hash:user.password_hash\r\n  });\r\n  if (!ok) return json({ ok:false, error:\"invalid credentials\" }, 401);\r\n\r\n  const { cookies: setCookies } = await issueSessionCookies(user, env);\r\n  return jsonWithCookies({ ok:true, user:{ id:user.id, email:user.email, roles:JSON.parse(user.roles||\"[]\") } }, setCookies);\r\n}\r\n\r\nasync function authLogout(request, env){\r\n  const reqCookies = parseCookies(request);\r\n  const refresh = reqCookies[\"refresh\"]||\"\";\r\n  if (refresh) {\r\n    const payload = await jwtVerify(refresh, env.AUTH_SECRET);\r\n    if (payload?.sub && payload?.jti) await d1DeleteRefresh(env, payload.sub, payload.jti);\r\n  }\r\n  return jsonWithCookies({ ok:true }, clearAuthCookies());\r\n}\r\n\r\nasync function authMe(request, env){\r\n  const user = await getAuthUser(request, env);\r\n  if (!user) return json({ ok:false, user:null });\r\n  const { password_alg, password_iter, password_salt, password_hash, ...safe } = user;\r\n  safe.roles = JSON.parse(safe.roles||\"[]\");\r\n  return json({ ok:true, user: safe });\r\n}\r\n\r\nasync function authRefresh(request, env){\r\n  const reqCookies = parseCookies(request);\r\n  const refresh = reqCookies[\"refresh\"] || \"\";\r\n  if (!refresh) return json({ ok:false, error:\"no refresh\" }, 401);\r\n\r\n  const payload = await jwtVerify(refresh, env.AUTH_SECRET);\r\n  if (!payload) return json({ ok:false, error:\"invalid refresh\" }, 401);\r\n\r\n  const alive = await d1HasRefresh(env, payload.sub, payload.jti);\r\n  if (!alive) return json({ ok:false, error:\"revoked refresh\" }, 401);\r\n\r\n  const user = await d1GetUserById(env, payload.sub);\r\n  if (!user) return json({ ok:false, error:\"user not found\" }, 404);\r\n\r\n  await d1DeleteRefresh(env, payload.sub, payload.jti);\r\n  const { cookies: setCookies } = await issueSessionCookies(user, env);\r\n  return jsonWithCookies({ ok:true }, setCookies);\r\n}\r\n\r\n/* =======================================================\r\n * Session cookies\r\n * ======================================================= */\r\nasync function issueSessionCookies(user, env){\r\n  const roles = typeof user.roles===\"string\" ? JSON.parse(user.roles||\"[]\") : (user.roles||[]);\r\n  const accessTtl = 15*60;                 // 15 min\r\n  const refreshTtl = 30*24*60*60;          // 30 giorni\r\n\r\n  const session = await jwtSign({ sub:user.id, email:user.email, roles }, env.AUTH_SECRET, accessTtl);\r\n  const jti = newId(16);\r\n  const refresh = await jwtSign({ sub:user.id, jti }, env.AUTH_SECRET, refreshTtl);\r\n  const exp = nowSec()+refreshTtl;\r\n\r\n  await d1InsertRefresh(env, user.id, jti, exp);\r\n\r\n  const cookies = [\r\n    cookieSerialize(\"session\", session, { maxAge:accessTtl, path:\"/\", httpOnly:true, secure:true, sameSite:\"None\" }),\r\n    cookieSerialize(\"refresh\", refresh, { maxAge:refreshTtl, path:\"/\", httpOnly:true, secure:true, sameSite:\"None\" })\r\n  ];\r\n  return { cookies };\r\n}\r\n\r\nexport async function getAuthUser(request, env){\r\n  const reqCookies = parseCookies(request);\r\n  const token = reqCookies[\"session\"];\r\n  if (!token) return null;\r\n  const payload = await jwtVerify(token, env.AUTH_SECRET);\r\n  if (!payload) return null;\r\n  return await d1GetUserById(env, payload.sub);\r\n}\r\n\r\nexport async function requireAuth(request, env){\r\n  const u = await getAuthUser(request, env);\r\n  if (!u) return json({ ok:false, error:\"unauthorized\" }, 401);\r\n  return u;\r\n}\r\n\r\n/* =======================================================\r\n * Google OAuth\r\n * ======================================================= */\r\nasync function googleStart(url, env){\r\n  const redirect = url.searchParams.get(\"redirect\") || env.SITE_URL || \"/\";\r\n  const stateObj = { r: redirect, n: b64urlStr(String.fromCharCode(...crypto.getRandomValues(new Uint8Array(8)))) };\r\n  const state = btoa(JSON.stringify(stateObj));\r\n\r\n  const params = new URLSearchParams({\r\n    client_id: env.GOOGLE_CLIENT_ID,\r\n    redirect_uri: env.GOOGLE_REDIRECT_URL,\r\n    response_type: \"code\",\r\n    scope: \"openid email profile\",\r\n    prompt: \"select_account\",\r\n    access_type: \"offline\",\r\n    state\r\n  });\r\n  const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?${params.toString()}`;\r\n  return Response.redirect(authUrl, 302);\r\n}\r\n\r\nasync function googleCallback(url, env){\r\n  // Guard-rail utile durante setup\r\n  if (!env.DB || !env.DB.prepare) {\r\n    return json({ ok:false, error:\"D1 binding 'DB' mancante sul Worker\" }, 500);\r\n  }\r\n\r\n  const code = url.searchParams.get(\"code\");\r\n  let redirect = env.SITE_URL || \"/\";\r\n  const stateRaw = url.searchParams.get(\"state\");\r\n  if (stateRaw) {\r\n    try {\r\n      const st = JSON.parse(atob(stateRaw));\r\n      if (typeof st?.r === \"string\") redirect = st.r;\r\n    } catch {}\r\n  }\r\n  if (!code) return json({ ok:false, error:\"missing code\" }, 400);\r\n\r\n  const tokenRes = await fetch(\"https://oauth2.googleapis.com/token\", {\r\n    method:\"POST\",\r\n    headers:{ \"content-type\":\"application/x-www-form-urlencoded\" },\r\n    body: new URLSearchParams({\r\n      code,\r\n      client_id: env.GOOGLE_CLIENT_ID,\r\n      client_secret: env.GOOGLE_CLIENT_SECRET,\r\n      grant_type: \"authorization_code\",\r\n      redirect_uri: env.GOOGLE_REDIRECT_URL\r\n    }).toString()\r\n  });\r\n  const tok = await tokenRes.json();\r\n  if (!tokenRes.ok) return json({ ok:false, error: tok.error_description || \"oauth error\" }, 400);\r\n\r\n  const idt = tok.id_token || \"\";\r\n  const [, payloadB64] = idt.split(\".\");\r\n  let payload;\r\n  try { payload = JSON.parse(atob(payloadB64.replace(/-/g,\"+\").replace(/_/g,\"/\"))); } catch { payload = null; }\r\n  const email = normEmail(payload?.email || \"\");\r\n  const sub = payload?.sub;\r\n  if (!email || !sub) return json({ ok:false, error:\"invalid google profile\" }, 400);\r\n\r\n  // Upsert utente\r\n  let user = await d1GetUserByGoogleSub(env, sub);\r\n  if (!user) {\r\n    const byEmail = await d1GetUserByEmail(env, email);\r\n    if (byEmail) {\r\n      await d1UpdateUserGoogleSub(env, byEmail.id, sub);\r\n      user = await d1GetUserById(env, byEmail.id);\r\n    } else {\r\n      const nu = { id:newId(12), email, google_sub: sub, roles:[\"user\"], password_alg:null, password_iter:null, password_salt:null, password_hash:null };\r\n      await d1InsertUser(env, nu);\r\n      user = await d1GetUserById(env, nu.id);\r\n    }\r\n  }\r\n\r\n  // Issue cookies + redirect\r\n  const { cookies: setCookies } = await issueSessionCookies(user, env);\r\n  const res = new Response(null, { status: 302, headers: { \"Location\": redirect }});\r\n  setCookies.forEach(c => res.headers.append(\"Set-Cookie\", c));\r\n  return res;\r\n}\r\n", "import { json } from \"./index.js\";\nimport { getAuthUser } from \"./auth.js\";\n\nfunction like(s){ return `%${s}%`; }\n\nexport async function routeTracks(request, url, env){\n  const path = url.pathname;\n\n  if (request.method===\"GET\" && path===\"/api/tracks/search\") {\n    return json(await tracksSearch(url, env));\n  }\n  if (request.method===\"GET\" && path===\"/api/tracks/by-id\") {\n    return json(await trackById(url, env));\n  }\n  if (request.method===\"GET\" && path===\"/api/tracks/stream-url\") {\n    return json(await trackStreamUrl(request, url, env));\n  }\n  if (request.method===\"POST\" && path===\"/api/plays\") {\n    const body = await request.json().catch(()=>({}));\n    return json(await trackPlay(body, env));\n  }\n\n  return null;\n}\n\nasync function tracksSearch(url, env){\n  const q = (url.searchParams.get(\"q\")||\"\").trim();\n  const genre = url.searchParams.get(\"genre\")||\"\";\n  const premium = url.searchParams.get(\"premium\")||\"\";\n\n  let sql = \"SELECT t.id,t.title,t.genre,t.is_premium,t.artist_id,a.name AS artist_name,ta.cover_url FROM tracks t JOIN artists a ON a.id=t.artist_id LEFT JOIN track_assets ta ON ta.track_id=t.id WHERE a.deleted_at IS NULL\";\n  const params = [];\n  if (q) { sql += \" AND (t.title LIKE ? OR a.name LIKE ?)\"; params.push(like(q), like(q)); }\n  if (genre) { sql += \" AND t.genre=?\"; params.push(genre); }\n  if (premium===\"free\") { sql += \" AND t.is_premium=0\"; }\n  if (premium===\"premium\") { sql += \" AND t.is_premium=1\"; }\n  sql += \" ORDER BY t.created_at DESC LIMIT 100\";\n\n  const rows = await env.DB.prepare(sql).bind(...params).all();\n  return { ok:true, items: rows.results || [] };\n}\n\nasync function trackById(url, env){\n  const id = url.searchParams.get(\"id\")||\"\";\n  const row = await env.DB.prepare(\"SELECT t.*, a.name AS artist_name FROM tracks t JOIN artists a ON a.id=t.artist_id WHERE t.id=?\").bind(id).first();\n  if (!row) return { ok:false, error:\"not found\" };\n  return { ok:true, track: row };\n}\n\nasync function hasAccess(env, userId, trackId){\n  if (!userId) return false;\n  // sub access\n  const now = Math.floor(Date.now()/1000);\n  const sub = await env.DB.prepare(\"SELECT 1 FROM access WHERE user_id=? AND kind='sub' AND (expires_at IS NULL OR expires_at>?)\").bind(userId, now).first();\n  if (sub) return true;\n  // per-track unlock\n  const one = await env.DB.prepare(\"SELECT 1 FROM access WHERE user_id=? AND kind='unlock' AND track_id=? AND (expires_at IS NULL OR expires_at>?)\").bind(userId, trackId, now).first();\n  return !!one;\n}\n\nasync function trackStreamUrl(request, url, env){\n  const trackId = url.searchParams.get(\"trackId\")||\"\";\n  const asset = await env.DB.prepare(\"SELECT preview_url, full_url FROM track_assets WHERE track_id=?\").bind(trackId).first();\n  if (!asset) return { ok:false, error:\"no asset\" };\n  const user = await getAuthUser(request, env);\n  const access = await hasAccess(env, user?.id, trackId);\n  return { ok:true, url: access ? (asset.full_url || asset.preview_url) : asset.preview_url };\n}\n\nasync function trackPlay(body, env){\n  const id = crypto.randomUUID();\n  const created = Math.floor(Date.now()/1000);\n  await env.DB.prepare(\"INSERT INTO plays (id,user_id,track_id,artist_id,milestone,seconds,created_at) VALUES (?,?,?,?,?,?,?)\")\n    .bind(id, body.userId||null, body.trackId, body.artistId, body.milestone||\"start\", body.seconds||0, created).run();\n  return { ok:true };\n}\n", "import { json } from \"./index.js\";\n\nfunction fee(amountCents, percent = \"20\") {\n  const p = parseFloat(percent || \"20\");\n  return Math.round((amountCents * p) / 100);\n}\nasync function s(env, endpoint, method = \"POST\", form = null) {\n  const headers = {\n    \"Authorization\": `Bearer ${env.STRIPE_SECRET}`,\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\n  };\n  const body = form ? new URLSearchParams(form).toString() : null;\n  const res = await fetch(`https://api.stripe.com/v1/${endpoint}`, { method, headers, body });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.error?.message || \"Stripe error\");\n  return data;\n}\n\nexport async function routePayments(request, url, env){\n  const path = url.pathname;\n\n  if (request.method===\"POST\" && path===\"/api/checkout/subscription\") {\n    const body = await request.json().catch(()=>({}));\n    return json(await checkoutSubscription(body, env));\n  }\n  if (request.method===\"POST\" && path===\"/api/checkout/unlock\") {\n    const body = await request.json().catch(()=>({}));\n    return json(await checkoutUnlock(body, env));\n  }\n  if (request.method===\"POST\" && path===\"/api/checkout/tip\") {\n    const body = await request.json().catch(()=>({}));\n    return json(await checkoutTip(body, env));\n  }\n  if (request.method===\"GET\" && path===\"/api/billing-portal\") {\n    return json(await billingPortal(url, env));\n  }\n  if (request.method===\"POST\" && path===\"/api/stripe/webhook\") {\n    const raw = await request.text();\n    let event; try { event = JSON.parse(raw); } catch { event = null; }\n    await handleWebhook(event, env);\n    return json({ ok:true });\n  }\n\n  return null;\n}\n\nasync function checkoutSubscription(body, env){\n  const priceId = body.priceId;\n  if (!priceId) return { ok:false, error:\"priceId required\" };\n\n  const success = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?sub=ok`;\n  const cancel = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?sub=cancel`;\n\n  const session = await s(env, \"checkout/sessions\", \"POST\", {\n    mode: \"subscription\",\n    success_url: success,\n    cancel_url: cancel,\n    \"line_items[0][price]\": priceId,\n    \"line_items[0][quantity]\": \"1\",\n    \"metadata[type]\": \"subscription\"\n  });\n\n  return { ok:true, url: session.url };\n}\n\nasync function checkoutUnlock(body, env){\n  const trackId = body.trackId;\n  const price = Math.max(0.29, parseFloat(body.price||\"0.49\"));\n  const amountCents = Math.round(price * 100);\n  if (!trackId) return { ok:false, error:\"trackId required\" };\n\n  const track = await env.DB.prepare(\"SELECT artist_id, title FROM tracks WHERE id=?\").bind(trackId).first();\n  if (!track) return { ok:false, error:\"track not found\" };\n\n  const artist = await env.DB.prepare(\"SELECT stripe_account_id, name FROM artists WHERE id=?\").bind(track.artist_id).first();\n  if (!artist || !artist.stripe_account_id) return { ok:false, error:\"artist not onboarded\" };\n\n  const feeAmt = fee(amountCents, env.CONNECT_FEE_PERCENT || \"20\");\n  const success = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?unlock=ok`;\n  const cancel = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?unlock=cancel`;\n\n  const session = await s(env, \"checkout/sessions\", \"POST\", {\n    mode: \"payment\",\n    success_url: success,\n    cancel_url: cancel,\n    \"line_items[0][price_data][currency]\": \"eur\",\n    \"line_items[0][price_data][product_data][name]\": `Sblocco: ${track.title}`,\n    \"line_items[0][price_data][unit_amount]\": String(amountCents),\n    \"line_items[0][quantity]\": \"1\",\n    \"payment_intent_data[application_fee_amount]\": String(feeAmt),\n    \"payment_intent_data[transfer_data][destination]\": artist.stripe_account_id,\n    \"metadata[type]\": \"unlock\",\n    \"metadata[trackId]\": trackId,\n    \"metadata[artistId]\": track.artist_id\n  });\n\n  return { ok:true, url: session.url };\n}\n\nasync function checkoutTip(body, env){\n  const artistId = body.artistId;\n  const amount = Math.max(1, parseFloat(body.amount||\"1.00\"));\n  const amountCents = Math.round(amount * 100);\n  const memo = body.memo || \"Tip\";\n\n  const artist = await env.DB.prepare(\"SELECT stripe_account_id, name FROM artists WHERE id=?\").bind(artistId).first();\n  if (!artist || !artist.stripe_account_id) return { ok:false, error:\"artist not onboarded\" };\n\n  const feeAmt = fee(amountCents, env.CONNECT_FEE_PERCENT || \"20\");\n  const success = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?tip=ok`;\n  const cancel = `${env.SITE_URL || \"https://ergodika.it\"}/pages/tracks.html?tip=cancel`;\n\n  const session = await s(env, \"checkout/sessions\", \"POST\", {\n    mode: \"payment\",\n    success_url: success,\n    cancel_url: cancel,\n    \"line_items[0][price_data][currency]\": \"eur\",\n    \"line_items[0][price_data][product_data][name]\": memo,\n    \"line_items[0][price_data][unit_amount]\": String(amountCents),\n    \"line_items[0][quantity]\": \"1\",\n    \"payment_intent_data[application_fee_amount]\": String(feeAmt),\n    \"payment_intent_data[transfer_data][destination]\": artist.stripe_account_id,\n    \"metadata[type]\": \"tip\",\n    \"metadata[artistId]\": artistId\n  });\n\n  return { ok:true, url: session.url };\n}\n\nasync function billingPortal(url, env){\n  const customer = url.searchParams.get(\"customer\");\n  const ret = url.searchParams.get(\"return\") || \"/\";\n  if (!customer) return { ok:false, error:\"customer required\" };\n  const base = env.SITE_URL || \"https://ergodika.it\";\n  const return_url = ret.startsWith(\"/\") ? `${base}${ret}` : `${base}/${ret}`;\n  const session = await s(env, \"billing_portal/sessions\", \"POST\", { customer, return_url });\n  return { ok:true, url: session.url };\n}\n\nasync function handleWebhook(event, env){\n  if (!event || !event.type) return;\n  switch (event.type) {\n    case \"checkout.session.completed\": {\n      const s = event.data?.object || {};\n      const type = s.metadata?.type || \"\";\n      if (type===\"unlock\") {\n        const trackId = s.metadata?.trackId||null;\n        const artistId = s.metadata?.artistId||null;\n        const userId = null;\n        const expires = null;\n        await env.DB.prepare(\"INSERT INTO access (id,user_id,track_id,kind,expires_at,created_at) VALUES (?,?,?,?,?,?)\")\n          .bind(crypto.randomUUID(), userId, trackId, \"unlock\", expires, Math.floor(Date.now()/1000)).run();\n      }\n      break;\n    }\n    default: break;\n  }\n}\n", "import {\r\n  routeAuth\r\n} from \"./auth.js\";\r\nimport {\r\n  routeTracks\r\n} from \"./tracks.js\";\r\nimport {\r\n  routePayments\r\n} from \"./payments.js\";\r\n\r\nexport default {\r\n  async fetch(request, env) {\r\n    const url = new URL(request.url);\r\n\r\n    if (request.method === \"GET\" && url.pathname === \"/\") {\r\n      return cors(json({\r\n        ok: true,\r\n        service: \"Ergodika API\",\r\n        time: new Date().toISOString()\r\n      }), env, request);\r\n    }\r\n    if (request.method === \"GET\" && url.pathname === \"/health\") {\r\n      return cors(new Response(\"OK\", {\r\n        status: 200\r\n      }), env, request);\r\n    }\r\n\r\n    // Preflight CORS\r\n    if (request.method === \"OPTIONS\") {\r\n      return cors(new Response(null, {\r\n        status: 204\r\n      }), env, request);\r\n    }\r\n\r\n    try {\r\n      // Auth\r\n      {\r\n        const r = await routeAuth(request, url, env);\r\n        if (r) return cors(r, env, request);\r\n      }\r\n      // Tracks\r\n      {\r\n        const r = await routeTracks(request, url, env);\r\n        if (r) return cors(r, env, request);\r\n      }\r\n      // Payments\r\n      {\r\n        const r = await routePayments(request, url, env);\r\n        if (r) return cors(r, env, request);\r\n      }\r\n\r\n      return cors(new Response(\"Not found\", {\r\n        status: 404\r\n      }), env, request);\r\n    } catch (e) {\r\n      return cors(json({\r\n        ok: false,\r\n        error: e.message\r\n      }, 500), env, request);\r\n    }\r\n  }\r\n}\r\n\r\nexport function json(data, status = 200) {\r\n  return new Response(JSON.stringify(data, null, 2), {\r\n    status,\r\n    headers: {\r\n      \"content-type\": \"application/json; charset=utf-8\"\r\n    }\r\n  });\r\n}\r\n\r\nexport function cors(res, env, request) {\r\n  const list = (env.ALLOWED_ORIGINS || \"\").split(\",\").map(s => s.trim()).filter(Boolean);\r\n  const allowed = list.length ? list : [\"https://www.ergodika.it\",\"https://ergodika.it\"];\r\n\r\n  const origin = request.headers.get(\"Origin\");\r\n  const okOrigin = allowed.includes(origin) ? origin : allowed[0];\r\n\r\n  const headers = new Headers(res.headers);\r\n  headers.set(\"Access-Control-Allow-Origin\", okOrigin);\r\n  headers.set(\"Vary\", \"Origin\");\r\n  headers.set(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\r\n  headers.set(\"Access-Control-Allow-Headers\", \"Content-Type,Authorization\");\r\n  headers.set(\"Access-Control-Max-Age\", \"86400\");\r\n  headers.set(\"Access-Control-Allow-Credentials\", \"true\");\r\n  return new Response(res.body, { status: res.status, headers });\r\n}\r\n"],
  "mappings": "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",
  "names": ["s", "s", "s", "s"]
}
